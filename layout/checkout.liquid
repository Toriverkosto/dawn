<!DOCTYPE html>
<html lang="{{ locale }}" dir="{{ direction }}" class="{{ checkout_html_classes }}">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0, user-scalable=0">
  <meta name="referrer" content="origin">

  <title>{{ page_title }}</title>

  {{ content_for_header }}

  {{ checkout_stylesheets }}
  {{ checkout_scripts }}

  {% if shop.metafields.global.google_tag_manager_id != nil %}
    <!-- Google Tag Manager -->
    <script>
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
              j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
              'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','{{ shop.metafields.global.google_tag_manager_id }}');
    </script>
    <!-- End Google Tag Manager -->
  {% endif %}

  <script>
    window.dataLayer = window.dataLayer || [];
    window.userData = {
      email: '{{ checkout.customer.email }}' || undefined,
      phone_number: '{{ checkout.customer.phone }}' || undefined,
      first_name: '{{ checkout.customer.first_name }}' || undefined,
      last_name: '{{ checkout.customer.last_name }}' || undefined,
      street: '{{ checkout.shipping_address.street }}' || undefined,
      city:  '{{ checkout.shipping_address.city }}' || undefined,
      region:  '{{ checkout.shipping_address.province }}' || undefined,
      country:  '{{ checkout.shipping_address.country }}' || undefined,
      postcode:  '{{ checkout.shipping_address.zip }}' || undefined,
    };

    window.dataLayer.push({user_data: window.userData});

    window.dataLayer.push({
      event: 'purchase',
      currency: '{{ shop.currency }}',
      transaction_id: '{{ order.order_number }}',
      value: {{ order.subtotal_price | money_without_currency | replace: ',', '.' | default '0'}},
      discount: Shopify?.checkout?.discount?.amount,
      coupon: Shopify?.checkout?.discount?.code,
      shipping: {{ order.shipping_price | money_without_currency | replace: ',', '.' | default '0'}},
      tax: {{ order.tax_price | money_without_currency | replace: ',', '.' | default '0' }},
      items: (Shopify?.checkout?.line_items || []).map(item => ({
        item_id: item?.sku,
        item_name: item?.title,
        item_brand: item?.vendor,
        price: parseFloat(item?.price) || null,
        quantity: item?.quantity,
      }))
    });

  </script>

  <style>
    /* Terms and conditions block styles */

    main.main__content p.terms-and-conditions-alert {
      color: red;
      letter-spacing: .04rem;
    }

    main.main__content p.terms-and-conditions-alert.hidden {
      display: none;
    }

    main.main__content p.terms-and-conditions-checkbox {
      font-size: 1.3rem;

      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;

      margin-top: 0.5rem;
    }

    main.main__content p.terms-and-conditions-checkbox input {
      margin-bottom: 4px;
      width: 1.6rem;
      height: 1.6rem;
      margin-right: 0.25rem;
    }

    main.main__content p.terms-and-conditions-checkbox label {
      font-size: 1.3rem;
      letter-spacing: .04rem;
    }

    main.main__content p.terms-and-conditions-checkbox a {
      color: #528ec1;
    }
  </style>

  {% comment %}<p class="terms-and-conditions-checkbox">{% endcomment %}
    {% comment %}<input type="checkbox" id="terms-and-conditions-agree" class="input-checkbox" />{% endcomment %}
    {% comment %}<label for="terms-and-conditions-agree">{% endcomment %}
      {% comment %}{{ 'sections.cart.terms_and_conditions_checkbox_label_html' | t: link: shop.terms_of_service.url }}{% endcomment %}
    {% comment %}</label>{% endcomment %}
  {% comment %}</p>{% endcomment %}
{% comment %}{% endcomment %}
  {% comment %}<p class="terms-and-conditions-alert hidden">{% endcomment %}
    {% comment %}{{ 'sections.cart.terms_and_conditions_alert' | t }}{% endcomment %}
  {% comment %}</p>{% endcomment %}

  <script>

    function renderTermsAndConditions () {
      console.log("Rendering thing");
      const p_checkbox = document.createElement('p');
      p_checkbox.className = 'terms-and-conditions-checkbox';

      const input_checkbox = document.createElement('input');
      input_checkbox.type = 'checkbox';
      input_checkbox.id = 'terms-and-conditions-agree';
      input_checkbox.className = 'input-checkbox';
      p_checkbox.append(input_checkbox);

      const checkbox_label = document.createElement('label');
      checkbox_label.setAttribute('for', 'terms-and-conditions-agree')
      checkbox_label.innerHTML = '{{ 'sections.cart.terms_and_conditions_checkbox_label_html' | t: link: shop.terms_of_service.url }}';
      p_checkbox.append(checkbox_label);

      const p_alert = document.createElement('p');
      p_alert.classList.add('terms-and-conditions-alert');
      p_alert.classList.add('hidden');
      p_alert.textContent = '{{ 'sections.cart.terms_and_conditions_alert' | t }}';
    
      const step_footer_element = document.querySelector('div.step__footer');
      console.log("Adding", p_checkbox, p_alert);
      console.log("Adding to", step_footer_element.parentElement, step_footer_element);
      step_footer_element.parentElement.insertBefore(p_checkbox, step_footer_element);
      step_footer_element.parentElement.insertBefore(p_alert, step_footer_element);
    }

    function addTermsAndConditionsListeners () {
      let tc_agree_element = document.querySelector('#terms-and-conditions-agree');
      if (tc_agree_element !== null) {
        let tc_alert_element = document.querySelector('p.terms-and-conditions-alert');

        tc_agree_element.addEventListener('click', function () {
          if (tc_agree_element.checked) {
            tc_alert_element.classList.add('hidden');
          } else {
            tc_alert_element.classList.remove('hidden');
          }
        });

        const checkout_handler = function (event) {
          if (!tc_agree_element.checked) {
            event.preventDefault();
            tc_alert_element.classList.remove('hidden');
            return false;
          } else {
            return true;
          }
        };

        document.querySelector('#continue_button').addEventListener('click', checkout_handler);

        return checkout_handler;
      } else {
        return null;
      }
    }

    document.addEventListener('DOMContentLoaded', function() {
      // setTimeout(() => {
      //  renderTermsAndConditions();
      //}, 2000);
      renderTermsAndConditions();
      const checkout_handler = addTermsAndConditionsListeners();
    });
  </script>
</head>

<body>
{% if shop.metafields.global.google_tag_manager_id != nil %}
  <!-- Google Tag Manager (noscript) -->
  <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-WB6W9KG"
                    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
  <!-- End Google Tag Manager (noscript) -->
{% endif %}
{{ skip_to_content_link }}

<header class="banner" data-header role="banner">
  <div class="wrap">
    {{ content_for_logo }}
  </div>
</header>

{{ order_summary_toggle }}
<div class="content" data-content>
  <div class="wrap">
    <div class="main">
      <header class="main__header" role="banner">
        {{ content_for_logo }}
        {{ breadcrumb }}
        {{ alternative_payment_methods }}
      </header>
      <main class="main__content" role="main">
        {{ content_for_layout }}
      </main>
      <footer class="main__footer" role="contentinfo">
        {{ content_for_footer }}
      </footer>
    </div>
    <aside class="sidebar" role="complementary">
      <div class="sidebar__header">
        {{ content_for_logo }}
      </div>
      <div class="sidebar__content">
        {{ content_for_order_summary }}
      </div>
    </aside>
  </div>
</div>

{{ tracking_code }}
</body>
</html>
